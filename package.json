{
  "name": "@thgamble/containerization-assist-mcp",
  "version": "1.1.8",
  "description": "TypeScript MCP server for AI-powered containerization workflows with Docker and Kubernetes support",
  "type": "module",
  "engines": {
    "node": ">=20.0.0"
  },
  "main": "./dist/src/index.js",
  "types": "./dist/src/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/src/index.d.ts",
      "import": "./dist/src/index.js",
      "default": "./dist/src/index.js"
    },
    "./tools": {
      "types": "./dist/service/tools/index.d.ts",
      "import": "./dist/service/tools/index.js"
    },
    "./tools/*": {
      "types": "./dist/service/tools/handlers/*.d.ts",
      "import": "./dist/service/tools/handlers/*.js"
    },
    "./types": {
      "types": "./dist/domain/types/index.d.ts",
      "import": "./dist/domain/types/index.js"
    },
    "./config": {
      "types": "./dist/service/config/config.d.ts",
      "import": "./dist/service/config/config.js"
    }
  },
  "bin": {
    "container-kit-mcp": "./dist/apps/cli.js",
    "ck-mcp": "./dist/apps/cli.js"
  },
  "files": [
    "dist/**/*",
    "README.md",
    "LICENSE",
    "CHANGELOG.md"
  ],
  "scripts": {
    "clean": "rm -rf dist coverage .tsbuildinfo*",
    "prebuild": "npm run clean && npm run lint && npm run typecheck",
    "prebuild:dev": "npm run clean",
    "prebuild:prod": "npm run clean && npm run validate",
    "build": "tsc -p tsconfig.build.json",
    "build:prod": "npm run prebuild:prod && tsc -p tsconfig.prod.json",
    "build:dev": "npm run prebuild:dev && tsc -p tsconfig.json",
    "build:fast": "npm run clean && tsc -p tsconfig.build.json --skipLibCheck",
    "build:watch": "tsc --watch --preserveWatchOutput -p tsconfig.json",
    "postbuild": "npm run copy:assets && npm run fix:imports && npm run make:executable",
    "fix:imports": "node scripts/fix-esm-imports.js",
    "copy:assets": "cp -r src/infrastructure/ai/prompts/templates dist/infrastructure/ai/prompts/ 2>/dev/null || true",
    "make:executable": "chmod +x dist/apps/cli.js 2>/dev/null || true",
    "test": "NODE_OPTIONS='--experimental-vm-modules' jest",
    "test:watch": "NODE_OPTIONS='--experimental-vm-modules' jest --watch",
    "test:coverage": "NODE_OPTIONS='--experimental-vm-modules' jest --coverage",
    "test:integration": "NODE_OPTIONS='--experimental-vm-modules' jest --testMatch='**/integration/**/*.test.ts' --testTimeout=120000",
    "test:unit": "NODE_OPTIONS='--experimental-vm-modules' jest --testMatch='**/unit/**/*.test.ts' --testTimeout=30000",
    "test:unit:quick": "NODE_OPTIONS='--experimental-vm-modules' jest --testMatch='**/unit/**/*.test.ts' --testTimeout=10000 --bail",
    "test:performance": "NODE_OPTIONS='--experimental-vm-modules' jest --testMatch='**/performance/**/*.test.ts' --testTimeout=60000",
    "test:ci": "npm run test:unit:quick",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write 'src/**/*.ts'",
    "format:check": "prettier --check 'src/**/*.ts'",
    "typecheck": "tsc --noEmit",
    "validate": "npm run lint && npm run typecheck && npm run test",
    "prepublishOnly": "npm run validate && npm run build:prod",
    "start": "node dist/apps/cli.js",
    "start:dev": "tsx watch apps/cli.ts",
    "dev": "npm run start:dev",
    "check-types": "npm run typecheck",
    "docs:generate": "typedoc --out docs src/index.ts",
    "bundle:check": "npm pack --dry-run",
    "bundle:size": "npm run build:prod && du -sh dist",
    "validate-infrastructure": "node scripts/validate-infrastructure.js",
    "version:patch": "npm version patch",
    "version:minor": "npm version minor",
    "version:major": "npm version major",
    "postversion": "git push && git push --tags",
    "release": "npm run validate && npm run build:prod && npm publish"
  },
  "dependencies": {
    "@kubernetes/client-node": "^1.3.0",
    "@modelcontextprotocol/sdk": "^1.17.5",
    "commander": "^11.1.0",
    "dockerode": "^4.0.0",
    "execa": "^9.6.0",
    "js-yaml": "^4.1.0",
    "nanoid": "^5.0.4",
    "pino": "^9.9.0",
    "zod": "^3.23.8",
    "zod-to-json-schema": "^3.22.5"
  },
  "devDependencies": {
    "@jest/globals": "^30.1.2",
    "@types/dockerode": "^3.3.23",
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^20.19.12",
    "@types/tar-fs": "^2.0.4",
    "@types/uuid": "^10.0.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.55.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^16.1.6",
    "pino-pretty": "^13.1.1",
    "prettier": "^3.1.0",
    "ts-jest": "^29.4.1",
    "tsx": "^4.7.0",
    "typedoc": "^0.25.13",
    "typescript": "^5.3.0"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix --max-warnings 100",
      "prettier --write"
    ]
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "containerization",
    "docker",
    "kubernetes",
    "ai-assisted",
    "devops",
    "java",
    "spring-boot",
    "maven",
    "gradle"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/gambtho/container-assist-js.git"
  },
  "bugs": {
    "url": "https://github.com/gambtho/container-assist-js/issues"
  },
  "homepage": "https://github.com/gambtho/container-assist-js#readme"
}
